//*CLASE NIVELACION - REPASO DE METODOS
//for, forEach, map, find, filter, some, reduce, mucho repaso de eso
//var - let - const

let a = 1
a = 2
//abajo sale error, no se puede reasignar otra variable a const. 
const b = 1
b = 2 
b = {
    x : 1
} // a la x dentro de b si se le puede reasignar el valor. 

//* NOTACI√ìN DE PUNTO/CORCHETE
b.x = 2 // asi se cambia el valor 
b["x"]

if(true){
    var c = 1
    let d = 1 
    const e = 1

    console.log({c})
    console.log({d})
    console.log({e})
}

console.log({c}) // esta no respeta el scope se muestra en consola, var es el admin de las variables.
console.log({d}) //no se muestra por scope.
console.log({e}) //no se muestra por scope.

//* ü§Ø var es la a del script del window.  osea var es lo mismo que window.a
window //es el objeto que engloba TODO JS. Todo lo que hagas estara contenido en window. 
// osea originalmente seria window.console.log("hola mundo") o window.document.querySelector("body")




////////////////////////////////////////
//* Clase 1 - 

/* 
TOTALMENTE APARTE: 
    para crear apps luego: https://www.electronjs.org/


COMANDOS TERMINAL: 
    pwd - directorio global 
    sudo - super user do, autentiÃÅquese como superusuario para obtener privilegios de seguridad adicionales
    ls: enumera el contenido de un directorio en particular
    cd: cambia a otro directorio (como en DOS)
    say Hello World!



DESCARGAR LOS NODE MODULES: 
    https://nodejs.org/es/
    Descargas 16.06 - ya lo tienes instalado

    luego: https://create-react-app.dev/ por si quiers leer como

    ------------------------------------------------------
    
    NPM INSTALL : npm install nombre-paquete
    
    instalaciones LOCALES: Instala / Descarga un paquete en el directorio local.
        Ej: npm i create-react-app (el app es el nombre que le das lo puedes cambiar)

    instalaciones GLOBALES: Instala / Descarfa un paquete en el SO (Sistema operativo)
        Ej: npm i -g create-react-app

EXPLICANDO LAS CARPETAS DE LAS node_modules: 
    //* SOLO IMPORTA INDEX.JS, puedes borrar todo lo demas
    y dejas en ese archivo solo: 
            import React from 'react'; 
            //es como crear: let react = import ./carperta llamada de algun lugar en toda mi carpeta que se llame react. 

            import ReactDOM from 'react-dom/client';
            import App from './App'; //carga la app que hice

            const root = ReactDOM.createRoot(document.getElementById('root'));
            // va pintar todo en el root del index.html de la carpeta public.
            root.render(<App />) //lo muestra en el render
            ;

    src - la mas importante, esto es lo que muestra el atomo moviendose.
    public - iconos, imagenes (si es una pagina chiqui en grandes irian en src, en src pueden ser dinamicas, en public no podes cambiar).
    .gitignore - te permite ignorar cosas de git. 
    package.lockjson - se crea en la instalacion, NO SE TOCA, NO SE PUEDE VOLVER ATRAS. SE DA√ëA. NO LO MIRES.
    package.json - archivo de configuracion, 
        Deependencies - te muestra lo que tienes intalada. Aunque en node_modules salgan muchoas cosas.
        Scripts - nuevas lineas de comando para la terminal ej react-scripts start. 

    Mas info de como incorporar cosa - https://create-react-app.dev/docs/adding-images-fonts-and-files/ aca sobre como incorporar fotos, fonts, etc

    */

//////////////////
//* Clase 2 - JSX & transpilling 

/* Empezas la app as√≠ : 
vas a:
    1. La terminal.
    2. Pones: cd (lugar de carpeta donde guardaste el node_modules)
    3. luego: npm start 
    (te debe abrir la app en el navegador, sino es porque probablemebte no estas en la carpeta que tiene los node_modules)
*/ 


//NOTAS UTILES.
//* NADA DE COMENTARIOS - TODO EN README.md - formas de escribir https://www.markdownguide.org/cheat-sheet/
// para programar en vs code sino tienes online- https://stackblitz.com/edit/react-2n967x?file=src%2FApp.js

/* 
////////////////////


//*     TRABAJANDO EN LA CARPETA:
//*     - archivo: INDEX.JS 
            import React from 'react'; 
            //es como crear: let react = import ./carperta llamada de algun lugar en toda mi carpeta que se llame react. 

            import ReactDOM from 'react-dom/client';
            import App from './components/app'; //carga la app que hice
            import './components/estilos.css'; //carga el css 

            const root = ReactDOM.createRoot(document.getElementById('root'));
            // va pintar todo en el root del index.html de la carpeta public.
            root.render(<App />) //lo muestra en el render
            ;

////////////////////

//* COMPONENTES - creas carpeta: components y metes las de abajo
Componente son funciones, SIEMPRE EN MAYUSCULAS, siempre tiene return, solo 1 return por compomente.

//*    -archivo: APP.JS
            function App(){ //Componente son funciones, SIEMPRE EN MAYUSCULAS, siempre tiene return, solo 1 return por compomente.
                return (
                    //OBLIGATORIO poner <fragment><fragment/> o vacia <></> se llena solo
                    //class no sirve pasa a className, de resto tdo si pero en camel case si son dos palabras. 
                    <> 
                    <Header/> //asi se importa el archivo componente header. 
                    <header id="header">
                        <h1 className="titulo">Titulo</h1>
                        <nav>
                            <a href="#">link</a>
                            <a href="#">link</a>
                        </nav>
                    </header>
                    </>
                )
            }


export default App; //SIEMPRE debes poner export. para importar algo debe esar previamente exportado.

////////////////////

//*    -archivo: header.js 
            function Header(){ 
                return (
                    <header id="header">
                        <h1 className="titulo">Titulo</h1>
                        <nav>
                            <a href="#">link</a>
                            <a href="#">link</a>
                        </nav>
                    </header>
                )
            }

export default Header; //SIEMPRE debes poner export. para importar algo debe esar previamente exportado.

*/


//////////////////
/* Clase 3 - 

UN COMPONENTE es qu√©? 
1. Una funci√≥n reuzable.
2. Empieza con mayusuculas.
3. Debe tener un return y export. 
4. ponle como figma, header todos tienen lo mismo. Atomic design, components en figma. */

//ESTRUCTURA USUAL DE COMPONENTE: 
// Baja la extension: ES7 + REACT JS SNIPPETS - https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets

//escribes (rafce) y te autocompleta la estructura normal de componente de react (como cuando escribes ! en html)
import React from 'react' // desde la nueva actualizacion no se necestia esta linea.

const Nav = () => {
    return (
        <div>Nav</div>
    )
}

export default Nav

// 

/* OTRAS LIBRERIAS APARTE DE BOOTSTRAP: 
1. bootstrap
2. https://chakra-ui.com/ - Yo recomiendo Chakra UI es bastante intuitivo 
https://bulma.io/
3. tailwind
4. yo use: MATERIAL UI tmb, es un cachito mas dificil que bootstrap creo pero se ve lindo
*/


/* como traer BOOTSTRAP? 
https://react-bootstrap.github.io/getting-started/introduction
https://reactstrap.github.io/?path=/story/home-installation--page

1. En terminal en tu proyecto: npm install react-bootstrap bootstrap

2. En tu index.js: import 'bootstrap/dist/css/bootstrap.min.css'; //esto carga bootstrap

3. luego en tus archivos pones: import {Button} from "react-bootstrap" // 


tipos de componenetes: 
- Estructurales o layout: App , Header, Footer. 

__________________________
funciones (En react son los componentes)


PROPS (en react son los paramentos) - SOn los parametros de los componentes. 
    
en props: 
    para no pasar strings: 
    <Footer test={true}/> // asi sale booleans. asi no salen strings. 
    <Footer test="true"/> // asi sale strings.
*/
